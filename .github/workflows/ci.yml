name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  validate:
    name: Validate Application
    runs-on: ubuntu-latest

    steps:
    - name: Harden the runner (Audit all outbound calls)
      uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit

    - name: Checkout code
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Node.js
      uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
      with:
        node-version: '20'

    - name: Install dependencies
      run: |
        npm install -g html-validate eslint

    - name: Validate HTML structure
      run: |
        html-validate src/index.html

    - name: Lint JavaScript
      run: |
        # Extract and lint JavaScript from HTML
        sed -n '/<script>/,/<\/script>/p' src/index.html | sed '1d;$d' > temp.js
        if [ -s temp.js ]; then
          npx eslint temp.js --env browser --parserOptions '{"ecmaVersion": 2020}' || true
        fi
        rm -f temp.js

    - name: Check for security issues
      run: |
        echo "Checking for common security issues..."

        # Check for unsafe HTML patterns - only flag dangerous concatenation
        if grep -n "innerHTML.*+.*[\"']" src/index.html; then
          echo "Warning: Found innerHTML concatenation at the above lines. Review for XSS vulnerabilities."
          exit 1
        fi

        # Check for eval usage
        if grep -n "eval(" src/index.html; then
          echo "Error: Found eval() usage - this is a security risk"
          exit 1
        fi

        # Check for unsafe URL schemes
        if grep -ni "javascript:" src/index.html; then
          echo "Error: Found javascript: protocol usage - this is a security risk"
          exit 1
        fi

        # Check for external script sources (should only be Chart.js CDN)
        external_scripts=$(grep -o 'src="http[^"]*"' src/index.html || true)
        if [ -n "$external_scripts" ]; then
          echo "External scripts found:"
          echo "$external_scripts"
          echo "Verify these are from trusted sources"
        fi

    - name: Test file integrity
      run: |
        # Check file size (should be reasonable for a single HTML file)
        size=$(wc -c < src/index.html)
        if [ $size -gt 1048576 ]; then  # 1MB limit
          echo "Warning: HTML file is larger than 1MB ($size bytes)"
        fi

        # Check for valid HTML structure
        if ! grep -q "<!DOCTYPE html>" src/index.html; then
          echo "Error: Missing DOCTYPE declaration"
          exit 1
        fi

        echo "File validation completed successfully"
